#define BOOST_TEST_MODULE CppNotes cppnotestest


#include "algorithms/data_structures/array/test_remove_duplicates_in_array.hpp"
#include "algorithms/data_structures/array/test_rotate_array.hpp"
#include "algorithms/data_structures/array/test_duplicates_in_array.hpp"
#include "algorithms/data_structures/array/test_intersection_of_two_arrays.hpp"
#include "algorithms/data_structures/array/test_move_zeroes_to_the_end_of_array.hpp"

#include "algorithms/data_structures/bt/test_max_depth_of_bt.hpp"
#include "algorithms/data_structures/bt/test_validate_bt.hpp"

#include "algorithms/data_structures/sll/test_palindrome_sll.hpp"
#include "algorithms/data_structures/sll/test_cyclic_sll.hpp"
#include "algorithms/data_structures/sll/test_remove_dup_linked_list.hpp"
#include "algorithms/data_structures/sll/test_find_k_to_last_elem_in_sll.hpp"
#include "algorithms/data_structures/sll/test_delete_node_from_sll.hpp"
#include "algorithms/data_structures/sll/test_partition_linked_list.hpp"
#include "algorithms/data_structures/sll/test_reverse_sll.hpp"
#include "algorithms/data_structures/sll/test_delete_k_to_last_elem_in_sll.hpp"
#include "algorithms/data_structures/sll/test_find_middle_of_sll.hpp"

#include "algorithms/math/test_add_two_numbers_as_linked_list.hpp"
#include "algorithms/math/test_basic_matrix_multiplication.hpp"
#include "algorithms/math/test_basic_numbers_multiplication.hpp"
#include "algorithms/math/test_is_number_power_of_two.hpp"
#include "algorithms/math/test_karatsuba_multiplication.hpp"
#include "algorithms/math/test_median_of_two_sorted_arrays.hpp"
#include "algorithms/math/test_strassen_matrix_multiplication.hpp"
#include "algorithms/math/test_primes.hpp"
#include "algorithms/math/test_parallel_lines.hpp"
#include "algorithms/math/test_int_operators.hpp"
#include "algorithms/math/test_rotate_matrix.hpp"
#include "algorithms/math/test_matrix_zero_out.hpp"
#include "algorithms/math/test_calc_angle_btw_clock_hands.hpp"
#include "algorithms/math/test_sum_of_multiples.hpp"
#include "algorithms/math/test_hamming_distance.hpp"
#include "algorithms/math/test_hamming_weight.hpp"
#include "algorithms/math/test_bitwise_operators.hpp"
#include "algorithms/math/test_hamming_distance_of_array.hpp"
#include "algorithms/math/test_hamming_weight_of_array.hpp"
#include "algorithms/math/test_square_root.hpp"
#include "algorithms/math/test_valid_perfect_square.hpp"
#include "algorithms/math/test_num_is_sum_of_square_numbers.hpp"
#include "algorithms/math/test_plus_one_to_number_as_array.hpp"
#include "algorithms/math/test_reverse_integer.hpp"
#include "algorithms/math/test_fibonacci_numbers.hpp"
#include "algorithms/math/test_greates_common_divisor.hpp"
#include "algorithms/math/test_knapsack_problem.hpp"

#include "algorithms/other/test_buy_sell_stock.hpp"
#include "algorithms/other/test_valid_sudoku.hpp"

#include "algorithms/search/test_binary_search.hpp"
#include "algorithms/search/test_find_two_elements.hpp"
#include "algorithms/search/test_jump_search.hpp"
#include "algorithms/search/test_interpolation_search.hpp"
#include "algorithms/search/test_exponential_search.hpp"
#include "algorithms/search/test_find_single_item.hpp"

#include "algorithms/sorting/test_bubble_sort.hpp"
#include "algorithms/sorting/test_gnome_sort.hpp"
#include "algorithms/sorting/test_selection_sort.hpp"
#include "algorithms/sorting/test_insertion_sort.hpp"
#include "algorithms/sorting/test_inversions_counter.hpp"
#include "algorithms/sorting/test_merge_sort.hpp"
#include "algorithms/sorting/test_quicksort.hpp"
#include "algorithms/sorting/test_quicksort_research.hpp"

#include "algorithms/strings/test_longest_palindrome.hpp"
#include "algorithms/strings/test_longest_substring.hpp"
#include "algorithms/strings/test_ransome_note.hpp"
#include "algorithms/strings/test_str_permutations.hpp"
#include "algorithms/strings/test_str_unique_char.hpp"
#include "algorithms/strings/test_str_reverse.hpp"
#include "algorithms/strings/test_is_str_permutation.hpp"
#include "algorithms/strings/test_str_replace_spaces.hpp"
#include "algorithms/strings/test_str_compression.hpp"
#include "algorithms/strings/test_str_is_substring.hpp"
#include "algorithms/strings/test_sum_of_binary_strings.hpp"
#include "algorithms/strings/test_find_unique_char_in_str.hpp"
#include "algorithms/strings/test_valid_palindrome.hpp"
#include "algorithms/strings/test_str_to_integer.hpp"
#include "algorithms/strings/test_count_and_say.hpp"

#include "files/test_read_last_lines.hpp"

#include "types/ds/test_binary_search_tree.hpp"
#include "types/ds/test_concurrent_map.hpp"
#include "types/ds/test_linked_list.hpp"
#include "types/ds/test_matrix.hpp"
#include "types/ds/test_vector_ds.hpp"
